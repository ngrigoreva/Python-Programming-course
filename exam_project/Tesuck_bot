# -*- coding: utf-8 -*-
import flask
import telebot
import conf
import requests

WEBHOOK_URL_BASE = "https://{}:{}".format(conf.WEBHOOK_HOST, conf.WEBHOOK_PORT)
WEBHOOK_URL_PATH = "/{}/".format(conf.TOKEN)

bot = telebot.TeleBot(conf.TOKEN, threaded=False)  # бесплатный аккаунт pythonanywhere запрещает работу с несколькими тредами

# удаляем предыдущие вебхуки, если они были
bot.remove_webhook()

# ставим новый вебхук = Слышь, если кто мне напишет, стукни сюда — url
bot.set_webhook(url=WEBHOOK_URL_BASE+WEBHOOK_URL_PATH)

app = flask.Flask(__name__)

# этот обработчик запускает функцию send_welcome, когда пользователь отправляет команды /start или /help
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.send_message(message.chat.id, "Здравствуйте! Это бот, который позволяет Вам работать с сервисом автоматического реферирования текстов Tesuck через Telegram. Пожалуйста, пришлите текст на русском языке, который хотите сократить, в виде файла в формате 'простой текст' (.txt)")


@bot.message_handler(content_types=['document'])
def handle_docs(message):
    file_info = tb.get_file(file_id)
    file = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format('391331927:AAGmL5jTcdwlb3rpMJorTUxK65OaZHzXAhs', file_info.file_path)) 
    r = requests.post('http://tesuck.eveel.ru/summarize.json', data = {'text':file.decode(encoding='UTF-8',errors='strict')})
    f = open('text.txt', 'w')
    for i in r:
        f.write(i)
    doc = open(f, 'rb')
    tb.send_document(chat_id, doc)
    #tb.send_document(chat_id, "FILEID")
    #bot.send_message(message.chat.id, 'Реферат Вашего текста:'.format(type(message.txt)))#'В вашем сообщении {} слов.'.format(len(message.text.split())))



# пустая главная страничка для проверки
@app.route('/', methods=['GET', 'HEAD'])
def index():
    return 'ok'


# обрабатываем вызовы вебхука = функция, которая запускается, когда к нам постучался телеграм
@app.route(WEBHOOK_URL_PATH, methods=['POST'])
def webhook():
    if flask.request.headers.get('content-type') == 'application/json':
        json_string = flask.request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return ''
    else:
        flask.abort(403)
